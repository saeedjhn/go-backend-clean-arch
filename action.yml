name: Go CI Pipeline

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  audit:
    name: Audit
    runs-on: ubuntu-22.04

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup Go environment
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.2
          cache: true

      # Cache Go modules
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Install & verify protoc compiler
      - name: Install Protobuf Compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
          protoc --version

      # Run Makefile from specified directory
      - name: Run Makefile to Generate Proto Files
        run: |
          sudo apt-get install -y make
          make # Run all Make command
        #        run: make gen/user # Run specific Make command
        working-directory: api/proto

      # Install dependencies
      - name: Install Dependencies
        run: |
          go mod tidy
          go mod download

      # Run audit
      - name: Run audit
        run: |
          go mod verify
          go vet ./...
          go fmt ./...

      # Run goimports
      - name: Run goimports
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          goimports -w .
      

      # Run Staticcheck
      - name: Run Staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...

      #       Run govulncheck
      #      - name: Run govulncheck
      #        run: |
      #          go install golang.org/x/vuln/cmd/govulncheck@latest
      #          govulncheck ./...

      # Run Linting with golangci-lint
      - name: Run GolangCI-Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.64.5
          args: --timeout=5m

  test:
    name: Test
    runs-on: ubuntu-22.04

      #    services:
      #      mysql:
      #        image: mysql:9.1.0
      #        env:
      #          MYSQL_ROOT_PASSWORD: root
      #          MYSQL_USER: admin
      #          MYSQL_PASSWORD: password123
      #          MYSQL_DATABASE: test_db
    #        ports:
    #          - 3306:3306
    #        options: >-
    #          --health-cmd="mysqladmin ping -hlocalhost -P3306 -uroot -ppassword123"
    #          --health-interval=10s
    #          --health-timeout=5s
    #          --health-retries=3
    # --health-cmd="mysqladmin ping -h localhost"

    #      postgres:
    #        image: postgres:latest
    #        ports:
    #          - 5432:5432
    #        env:
    #          POSTGRES_USER: testuser
    #          POSTGRES_PASSWORD: testpassword
    #          POSTGRES_DB: testdb
    #        options: >-
    #          --health-cmd "pg_isready -U testuser"
    #          --health-interval 10s
    #          --health-timeout 5s
    #          --health-retries 5

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup Go environment
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.2
          cache: true

      # Cache Go modules
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Install & verify protoc compiler
      - name: Install Protobuf Compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
          protoc --version

      # Run Makefile from specified directory
      - name: Run Makefile to Generate Proto Files
        run: |
          sudo apt install -y make
          make # Run all Make command
        #        run: make gen/user # Run specific Make command
        working-directory: api/proto

      # Install dependencies
      - name: Install Dependencies
        run: |
          go mod tidy
          go mod download

      # Run Tests
      - name: Run tests
        run: |
          go install github.com/mfridman/tparse@latest
          TEST_PATH=./... make tparse
        #          go test -v -race -count=1 -vet=off ./...


      # Run Unit Tests
      #      - name: Run Unit Tests
      #        run: go test -v -race -buildvcs ./...

      # Test Coverage - Coverage with go-test-tools
      #      - name: Test Coverage
      #        run: |
      #          go test -coverprofile=coverage.out ./...
      #          go tool cover -func=coverage.out

      # Upload Coverage Report - Coverage with Codecov
      #      - name: Run coverage
      #        run: go test -race -coverprofile=coverage.out -covermode=atomic
      #      - name: Upload coverage to codecov
      #        uses: codecov/codecov-action@v3
      #        with:
      #          files: coverage.out
      #          flags: unittests
      #          name: codecov-go
      #          fail_ci_if_error: true


#  deploy:
#    name: Deploy to Production
#    runs-on: ubuntu-latest
#    needs: build
#    if: github.ref == 'refs/heads/main'
#
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v3
#
#      - name: Deploy to Production Server
#        run: |
#          echo "Deploying application..."