name: Go CI Pipeline

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup Go environment
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.2
          cache: true

      # Cache Go modules
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Install dependencies
      - name: Install Dependencies
        run: |
          go mod tidy
          go mod download

      # Run Linting with golangci-lint
      #      - name: Run GolangCI-Lint
      #        uses: golangci/golangci-lint-action@v3
      #        with:
      #          version: v1.23.2  # نسخه مناسب lint
      #          args: --timeout=2m

      # Run Staticcheck
      - name: Run Staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...

      # Build the Go project
      - name: Build
        run: go build -v ./...

      # Run Unit Tests
      - name: Run Unit Tests
        run: go test -v -race ./...

      # Test Coverage
      #      - name: Test Coverage
      #        run: |
      #          go test -coverprofile=coverage.out ./...
      #          go tool cover -func=coverage.out
      #        continue-on-error: true

      # Upload Coverage Report
  #      - name: Upload Coverage to Codecov
  #        uses: codecov/codecov-action@v3
  #        with:
  #          files: coverage.out
  #          flags: unittests
  #          name: codecov-go
  #          fail_ci_if_error: true

  security:
    name: Security Checks
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Install Go
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.2

      # Run Gosec (Go security scanner)
      - name: Run Gosec
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          gosec ./...

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to Production Server
        run: |
          echo "Deploying application..."